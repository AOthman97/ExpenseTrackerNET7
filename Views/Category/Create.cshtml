@model ExpenseTrackerNET7.Models.Category

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Category</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-3">
                @* The ejs-for is the syncfucion eqivalant of the asp-for attribute to include this in the actions like post *@
                <ejs-textbox id="Title" placeholder="Title" ejs-for="@Model.Title" floatLabelType="Auto"></ejs-textbox>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <ejs-textbox id="Icon" placeholder="Icon" ejs-for="@Model.Icon" floatLabelType="Auto"></ejs-textbox>
                <span asp-validation-for="Icon" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                @*<label asp-for="Type" class="control-label"></label>
                <input asp-for="Type" class="form-control" />
                <span asp-validation-for="Type" class="text-danger"></span>*@
                <div class='e-btn-group custom-radiobtn-group'>
                    <input type="radio" id="RadioExpenses" name="Type" value="Expenses" checked="@(Model.Type == "Expenses")" />
                    <label class="e-btn" for="RadioExpenses">Expenses</label>
                    <input type="radio" id="RadioIncome" name="Type" value="Income" checked="@(Model.Type == "Income")" />
                    <label class="e-btn" for="RadioIncome">Income</label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
